«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»


«IMPORT org::yakindu::sct::generator::xpand»
«EXTENSION org::yakindu::sct::generator::xpand::expression»
«EXTENSION org::yakindu::sct::generator::xpand::Name»

«DEFINE file FOR ExecutionFlow-»
«FILE this.scName().toString()+'_tick.c'»

«FOREACH this.states AS state -»
void enter_«state.simpleName»() {
	«EXPAND ActionCode FOR state.enterSequence-»
	«this.name».state_time = 0;
}
void during_«state.simpleName»() {
	«EXPAND ActionCode FOR state.reactSequence-»
	«this.name».state_time++;
}
void leave_«state.simpleName»() {
	«EXPAND ActionCode FOR state.exitSequence-»
}
«ENDFOREACH»

void counter_tick(){
	OS_ENTER_CRITICAL();
	switch(«this.name».state){
		«REM»«FOREACH this.states.reject(e|e.simpleName.contains(this.states.simpleName.first())) AS state-»«ENDREM»
		«FOREACH this.states AS state -»
	    case «this.name + "_" + state.simpleName-»_state:
	    	during_«state.name»();
	    	//TODO handle transitions
			break;
		«ENDFOREACH-»
	}
	OS_EXIT_CRITICAL();
}
«ENDFILE»»
«ENDDEFINE»

«DEFINE ActionCode FOR Step-»
«ENDDEFINE»

«DEFINE ActionCode FOR Sequence -»
  «EXPAND ActionCode FOREACH this.steps-»
«ENDDEFINE»

«DEFINE ActionCode FOR Execution-»
	«this.statement.toCCode()»;
«ENDDEFINE»

«DEFINE ActionCode FOR Reaction»
  «EXPAND ActionCode FOR this.effect» 
«ENDDEFINE»

«DEFINE ReactCode FOR Sequence» 
«EXPAND ActionCode FOREACH this.steps»
«ENDDEFINE»

«DEFINE ActionCode FOR ScheduleTimeEvent»
«IF this.comment != null»
/* «this.comment» */
«ENDIF»
	 «this.timeValue.toCCode()»
«ENDDEFINE»

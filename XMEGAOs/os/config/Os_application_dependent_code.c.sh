#!/bin/sh

SED="$(which gsed)"
if [ -z "$SED" ] ; then
    SED="$(which sed)"
fi
if ! "$SED" --version | grep -q "GNU" ; then
    echo "We need a GNU sed !" >&2
    exit 1
fi

DEST="$(cd "$(dirname "$0")" ; pwd)/Os_application_dependent_code.c"

DIFF="`which diff`"
if [ -n "$DIFF" -a -e "$DEST" ] ; then
    REAL_DEST="$DEST"
    DEST="$DEST.tmp"
fi

cat >"$DEST" <<EOF
/*
 * Os_application_dependent_code.c
 *
 * generated by script
 */

// This file contains code that should be part of the OS, but depends on the
// application configuration (e.g. count of TCBs). It must be compiled for
// each application.

// This file is generated by the shell script Os_application_dependent_code.c.sh
// DO NOT MODIFY IT !!!

// You can mark application specific code like this:


// will be compiled in Os_application_dependent_code.c:
#ifdef APPLICATION_DEPENDENT_CODE
// your includes (including the directory name!)
// your code
#endif	// end of APPLICATION_DEPENDENT_CODE


#include "config/Os_cfg_application.h"

EOF

PROJECT_DIR_NAME="$(basename "$(cd "$(dirname "$0")/../" ; pwd)")"
cd "$(dirname "$0")/../../"
find "$PROJECT_DIR_NAME" -iname "*.c" -exec "$SED" -ne '/^#ifdef\s*APPLICATION_DEPENDENT_CODE\($\|\s\)/,/^#\(else\|endif\)\s*\/\/\s*end of APPLICATION_DEPENDENT_CODE\($\|\s\)/ { s§^#ifdef\s*APPLICATION_DEPENDENT_CODE\($\|\s.*$\)§\n\n\/\/ from file {}:\n§ ; /^#\(else\|endif\)\s*\/\/\s*end of APPLICATION_DEPENDENT_CODE\($\|\s\)/ !p }' {} \; >>"$DEST"

if [ -n "$DEST" -a -n "$REAL_DEST" ] ; then
    if "$DIFF" "$DEST" "$REAL_DEST" >/dev/null ; then
        # not changed -> don't touch the file
        rm "$DEST"
    else
        # really change
        mv "$DEST" "$REAL_DEST"
    fi
fi

